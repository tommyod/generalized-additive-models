name: Python CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0' # weekly

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # [macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    name: Python ${{ matrix.python-version }} / ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[dev,lint,doc]

    - name: Run linting
      run: |
        black generalized_additive_models --check -l 120
        ruff check generalized_additive_models --ignore=E741
        black docs --check
        black examples --check
        codespell --ignore-words-list='te,ans' --skip='*.csv'
        flake8 generalized_additive_models docs --select=F811,F841,F401,E711,E712,E731,E721 --exclude=tests,'*ipynb_checkpoints*'

    - name: Run tests
      run: pytest generalized_additive_models --doctest-modules

    - name: Build documentation
      run: |
        sudo apt-get update && sudo apt-get install -y pandoc optipng
        sphinx-build docs _built_docs/html

    - name: Build package
      run: |
        pip install build twine
        python -m build
        twine check dist/* --strict

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
